- name: Set Prompt
  ansible.builtin.shell: set-prompt ci-server

- name: Create actions directory
  ansible.builtin.file:
    path: /actions-runner
    state: directory
    owner: ec2-user
    group: ec2-user

- name: Download runner software
  ansible.builtin.unarchive:
    src: https://github.com/actions/runner/releases/download/v2.317.0/actions-runner-linux-x64-2.317.0.tar.gz
    dest: /actions-runner
    owner: ec2-user
    group: ec2-user
    remote_src: true

- name: Install libicu
  ansible.builtin.dnf:
    name: libicu
    state: installed

- name: Install gh cli
  ansible.builtin.shell: |
    dnf install 'dnf-command(config-manager)' -y
    dnf config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo
    dnf install gh --repo gh-cli -y

# This token will run if we auth manually , Following are two commands we need to run.
# gh auth login
# gh auth refresh -h github.com -s admin:org
- name: Get token
  ansible.builtin.shell: |
    gh api --method POST -H "Accept: application/vnd.github+json" /orgs/vikramdevopsorg/actions/runners/registration-token | jq .token | xargs
  register: token
- name: debug
  ansible.builtin.debug:
    msg: "{{token}}"
#
#- name: Remove Runner
#  ansible.builtin.shell: sudo ./svc.sh stop  ; sudo ./svc.sh uninstall ; /actions-runner/config.sh remove --token {{token.stdout}}
#  become_user: ec2-user
#  args:
#    chdir: /actions-runner
#  ignore_errors: yes
#
#- name: Configure Runner
#  ansible.builtin.shell: /actions-runner/config.sh --url https://github.com/vikramdevopsorg --token {{token.stdout}} --unattended --replace
#  become_user: ec2-user
#  args:
#    chdir: /actions-runner
#
#- name: Install Runner Service
#  ansible.builtin.shell: ./svc.sh install ;./svc.sh start
#  args:
#    chdir: /actions-runner
#
#- name: Install java
#  ansible.builtin.dnf:
#    name: java-17-openjdk
#    state: installed
#
#- name: Sonar Directory
#  ansible.builtin.file:
#    path: /sonar-scanner
#    state: directory
#    owner: ec2-user
#    group: ec2-user
#
#- name: Download and extract sonar-scanner
#  ansible.builtin.unarchive:
#    remote_src: true
#    src: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.1.0.4477-linux-x64.zip
#    dest: /sonar-scanner
#    owner: ec2-user
#    group: ec2-user
#- name: Install Argocd cli
#  ansible.builtin.shell: |
#    curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
#    install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
#    rm -f argocd-linux-amd64
#
#- name: Install kubectl
#  ansible.builtin.shell: |
#    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
#    install -m 555 kubectl /usr/local/bin/kubectl
#    rm -f kubectl
#
#- name: Install Docker
#  ansible.builtin.dnf:
#    name: docker
#    state: installed
